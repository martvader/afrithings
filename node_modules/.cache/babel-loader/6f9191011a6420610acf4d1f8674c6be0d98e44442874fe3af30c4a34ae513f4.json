{"ast":null,"code":"import { __exports as useSyncExternalStoreShim_development } from \"../../../_virtual/use-sync-external-store-shim.development.mjs\";\nimport React__default from \"react\";\n/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar hasRequiredUseSyncExternalStoreShim_development;\nfunction requireUseSyncExternalStoreShim_development() {\n  if (hasRequiredUseSyncExternalStoreShim_development) return useSyncExternalStoreShim_development;\n  hasRequiredUseSyncExternalStoreShim_development = 1;\n  if (process.env.NODE_ENV !== \"production\") {\n    (function () {\n      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === \"function\") {\n        __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n      }\n      var React = React__default;\n      var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n      function error(format) {\n        {\n          {\n            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              args[_key2 - 1] = arguments[_key2];\n            }\n            printWarning(\"error\", format, args);\n          }\n        }\n      }\n      function printWarning(level, format, args) {\n        {\n          var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n          var stack = ReactDebugCurrentFrame.getStackAddendum();\n          if (stack !== \"\") {\n            format += \"%s\";\n            args = args.concat([stack]);\n          }\n          var argsWithFormat = args.map(function (item) {\n            return String(item);\n          });\n          argsWithFormat.unshift(\"Warning: \" + format);\n          Function.prototype.apply.call(console[level], console, argsWithFormat);\n        }\n      }\n      function is(x, y) {\n        return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;\n      }\n      var objectIs = typeof Object.is === \"function\" ? Object.is : is;\n      var useState = React.useState,\n        useEffect = React.useEffect,\n        useLayoutEffect = React.useLayoutEffect,\n        useDebugValue = React.useDebugValue;\n      var didWarnOld18Alpha = false;\n      var didWarnUncachedGetSnapshot = false;\n      function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n        {\n          if (!didWarnOld18Alpha) {\n            if (React.startTransition !== void 0) {\n              didWarnOld18Alpha = true;\n              error(\"You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.\");\n            }\n          }\n        }\n        var value = getSnapshot();\n        {\n          if (!didWarnUncachedGetSnapshot) {\n            var cachedValue = getSnapshot();\n            if (!objectIs(value, cachedValue)) {\n              error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n              didWarnUncachedGetSnapshot = true;\n            }\n          }\n        }\n        var _useState = useState({\n            inst: {\n              value,\n              getSnapshot\n            }\n          }),\n          inst = _useState[0].inst,\n          forceUpdate = _useState[1];\n        useLayoutEffect(function () {\n          inst.value = value;\n          inst.getSnapshot = getSnapshot;\n          if (checkIfSnapshotChanged(inst)) {\n            forceUpdate({\n              inst\n            });\n          }\n        }, [subscribe, value, getSnapshot]);\n        useEffect(function () {\n          if (checkIfSnapshotChanged(inst)) {\n            forceUpdate({\n              inst\n            });\n          }\n          var handleStoreChange = function () {\n            if (checkIfSnapshotChanged(inst)) {\n              forceUpdate({\n                inst\n              });\n            }\n          };\n          return subscribe(handleStoreChange);\n        }, [subscribe]);\n        useDebugValue(value);\n        return value;\n      }\n      function checkIfSnapshotChanged(inst) {\n        var latestGetSnapshot = inst.getSnapshot;\n        var prevValue = inst.value;\n        try {\n          var nextValue = latestGetSnapshot();\n          return !objectIs(prevValue, nextValue);\n        } catch (error2) {\n          return true;\n        }\n      }\n      function useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n        return getSnapshot();\n      }\n      var canUseDOM = !!(typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\");\n      var isServerEnvironment = !canUseDOM;\n      var shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\n      var useSyncExternalStore$2 = React.useSyncExternalStore !== void 0 ? React.useSyncExternalStore : shim;\n      useSyncExternalStoreShim_development.useSyncExternalStore = useSyncExternalStore$2;\n      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === \"function\") {\n        __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n      }\n    })();\n  }\n  return useSyncExternalStoreShim_development;\n}\nexport { requireUseSyncExternalStoreShim_development as __require };","map":{"version":3,"names":["process","env","NODE_ENV","__REACT_DEVTOOLS_GLOBAL_HOOK__","registerInternalModuleStart","Error","React","React__default","ReactSharedInternals","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","error","format","_len2","arguments","length","args","Array","_key2","printWarning","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","is","x","y","objectIs","Object","useState","useEffect","useLayoutEffect","useDebugValue","didWarnOld18Alpha","didWarnUncachedGetSnapshot","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","startTransition","value","cachedValue","_useState","inst","forceUpdate","checkIfSnapshotChanged","handleStoreChange","latestGetSnapshot","prevValue","nextValue","error2","useSyncExternalStore$1","canUseDOM","window","document","createElement","isServerEnvironment","shim","useSyncExternalStore$2","useSyncExternalStoreShim_development","registerInternalModuleStop"],"sources":["/home/martin/node_modules/.pnpm/@shopify+hydrogen-react@2023.4.0_react-dom@18.2.0_react@18.2.0_typescript@5.0.4/node_modules/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js"],"sourcesContent":["/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}