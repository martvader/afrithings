{"ast":null,"code":"import { useState, useEffect } from \"react\";\nconst SCRIPTS_LOADED = {};\nfunction loadScript(src, options) {\n  const isScriptLoaded = SCRIPTS_LOADED[src];\n  if (isScriptLoaded) {\n    return isScriptLoaded;\n  }\n  const promise = new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    if (options == null ? void 0 : options.module) {\n      script.type = \"module\";\n    } else {\n      script.type = \"text/javascript\";\n    }\n    script.src = src;\n    script.onload = () => {\n      resolve(true);\n    };\n    script.onerror = () => {\n      reject(false);\n    };\n    if ((options == null ? void 0 : options.in) === \"head\") {\n      document.head.appendChild(script);\n    } else {\n      document.body.appendChild(script);\n    }\n  });\n  SCRIPTS_LOADED[src] = promise;\n  return promise;\n}\nfunction useLoadScript(url, options) {\n  const [status, setStatus] = useState(\"loading\");\n  const stringifiedOptions = JSON.stringify(options);\n  useEffect(() => {\n    async function loadScriptWrapper() {\n      try {\n        setStatus(\"loading\");\n        await loadScript(url, options);\n        setStatus(\"done\");\n      } catch (error) {\n        setStatus(\"error\");\n      }\n    }\n    loadScriptWrapper().catch(() => {\n      setStatus(\"error\");\n    });\n  }, [url, stringifiedOptions, options]);\n  return status;\n}\nexport { loadScript, useLoadScript };","map":{"version":3,"names":["SCRIPTS_LOADED","loadScript","src","options","isScriptLoaded","promise","Promise","resolve","reject","script","document","createElement","module","type","onload","onerror","in","head","appendChild","body","useLoadScript","url","status","setStatus","useState","stringifiedOptions","JSON","stringify","useEffect","loadScriptWrapper","error","catch"],"sources":["/home/martin/node_modules/.pnpm/@shopify+hydrogen-react@2023.4.0_react-dom@18.2.0_react@18.2.0_typescript@5.0.4/node_modules/@shopify/hydrogen-react/src/load-script.tsx"],"sourcesContent":["import {useState, useEffect} from 'react';\n\nconst SCRIPTS_LOADED: Record<string, Promise<boolean>> = {};\n\nexport function loadScript(\n  src: string,\n  options?: {module?: boolean; in?: 'head' | 'body'},\n): Promise<boolean> {\n  const isScriptLoaded = SCRIPTS_LOADED[src];\n\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  if (isScriptLoaded) {\n    return isScriptLoaded;\n  }\n\n  const promise = new Promise<boolean>((resolve, reject) => {\n    const script = document.createElement('script');\n    if (options?.module) {\n      script.type = 'module';\n    } else {\n      script.type = 'text/javascript';\n    }\n    script.src = src;\n    script.onload = (): void => {\n      resolve(true);\n    };\n    script.onerror = (): void => {\n      reject(false);\n    };\n    if (options?.in === 'head') {\n      document.head.appendChild(script);\n    } else {\n      document.body.appendChild(script);\n    }\n  });\n\n  SCRIPTS_LOADED[src] = promise;\n\n  return promise;\n}\n\ntype LoadScriptParams = Parameters<typeof loadScript>;\n\n/**\n * The `useLoadScript` hook loads an external script tag in the browser. It allows React components to lazy-load large third-party dependencies.\n */\nexport function useLoadScript(\n  url: LoadScriptParams[0],\n  options?: LoadScriptParams[1],\n): ScriptState {\n  const [status, setStatus] = useState<ScriptState>('loading');\n  const stringifiedOptions = JSON.stringify(options);\n\n  useEffect(() => {\n    async function loadScriptWrapper(): Promise<void> {\n      try {\n        setStatus('loading');\n        await loadScript(url, options);\n        setStatus('done');\n      } catch (error) {\n        setStatus('error');\n      }\n    }\n\n    loadScriptWrapper().catch(() => {\n      setStatus('error');\n    });\n  }, [url, stringifiedOptions, options]);\n\n  return status;\n}\n\ntype ScriptState = 'loading' | 'done' | 'error';\n"],"mappings":";AAEA,MAAMA,cAAA,GAAmD;AAEzC,SAAAC,WACdC,GAAA,EACAC,OAAA,EACkB;EACZ,MAAAC,cAAA,GAAiBJ,cAAA,CAAeE,GAAG;EAGzC,IAAIE,cAAA,EAAgB;IACX,OAAAA,cAAA;EACT;EAEA,MAAMC,OAAA,GAAU,IAAIC,OAAA,CAAiB,CAACC,OAAA,EAASC,MAAA,KAAW;IAClD,MAAAC,MAAA,GAASC,QAAA,CAASC,aAAA,CAAc,QAAQ;IAC9C,IAAIR,OAAA,oBAAAA,OAAA,CAASS,MAAA,EAAQ;MACnBH,MAAA,CAAOI,IAAA,GAAO;IAAA,OACT;MACLJ,MAAA,CAAOI,IAAA,GAAO;IAChB;IACAJ,MAAA,CAAOP,GAAA,GAAMA,GAAA;IACbO,MAAA,CAAOK,MAAA,GAAS,MAAY;MAC1BP,OAAA,CAAQ,IAAI;IAAA;IAEdE,MAAA,CAAOM,OAAA,GAAU,MAAY;MAC3BP,MAAA,CAAO,KAAK;IAAA;IAEV,KAAAL,OAAA,oBAAAA,OAAA,CAASa,EAAA,MAAO,QAAQ;MACjBN,QAAA,CAAAO,IAAA,CAAKC,WAAA,CAAYT,MAAM;IAAA,OAC3B;MACIC,QAAA,CAAAS,IAAA,CAAKD,WAAA,CAAYT,MAAM;IAClC;EAAA,CACD;EAEDT,cAAA,CAAeE,GAAG,IAAIG,OAAA;EAEf,OAAAA,OAAA;AACT;AAOgB,SAAAe,cACdC,GAAA,EACAlB,OAAA,EACa;EACb,MAAM,CAACmB,MAAA,EAAQC,SAAS,IAAIC,QAAA,CAAsB,SAAS;EACrD,MAAAC,kBAAA,GAAqBC,IAAA,CAAKC,SAAA,CAAUxB,OAAO;EAEjDyB,SAAA,CAAU,MAAM;IACd,eAAeC,kBAAA,EAAmC;MAC5C;QACFN,SAAA,CAAU,SAAS;QACb,MAAAtB,UAAA,CAAWoB,GAAA,EAAKlB,OAAO;QAC7BoB,SAAA,CAAU,MAAM;MAAA,SACTO,KAAA;QACPP,SAAA,CAAU,OAAO;MACnB;IACF;IAEkBM,iBAAA,GAAEE,KAAA,CAAM,MAAM;MAC9BR,SAAA,CAAU,OAAO;IAAA,CAClB;EACA,IAACF,GAAA,EAAKI,kBAAA,EAAoBtB,OAAO,CAAC;EAE9B,OAAAmB,MAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}