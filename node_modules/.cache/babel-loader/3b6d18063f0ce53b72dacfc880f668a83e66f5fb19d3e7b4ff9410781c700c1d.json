{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport { Money } from \"./Money.mjs\";\nimport { useCart } from \"./CartProvider.mjs\";\nfunction CartCost(props) {\n  const {\n    cost\n  } = useCart();\n  const {\n    amountType = \"total\",\n    children,\n    ...passthroughProps\n  } = props;\n  let amount;\n  if (amountType == \"total\") {\n    amount = cost == null ? void 0 : cost.totalAmount;\n  } else if (amountType == \"subtotal\") {\n    amount = cost == null ? void 0 : cost.subtotalAmount;\n  } else if (amountType == \"tax\") {\n    amount = cost == null ? void 0 : cost.totalTaxAmount;\n  } else if (amountType == \"duty\") {\n    amount = cost == null ? void 0 : cost.totalDutyAmount;\n  }\n  if (amount == null) {\n    return null;\n  }\n  return /* @__PURE__ */jsx(Money, {\n    ...passthroughProps,\n    data: amount,\n    children\n  });\n}\nexport { CartCost };","map":{"version":3,"names":["CartCost","props","cost","useCart","amountType","children","passthroughProps","amount","totalAmount","subtotalAmount","totalTaxAmount","totalDutyAmount","jsx","Money","data"],"sources":["/home/martin/node_modules/.pnpm/@shopify+hydrogen-react@2023.4.0_react-dom@18.2.0_react@18.2.0_typescript@5.0.4/node_modules/@shopify/hydrogen-react/src/CartCost.tsx"],"sourcesContent":["import {Money, type MoneyPropsBase} from './Money.js';\nimport {useCart} from './CartProvider.js';\n\ninterface CartCostPropsBase {\n  /** A string type that defines the type of cost needed. Valid values: `total`, `subtotal`, `tax`, or `duty`. */\n  amountType?: 'total' | 'subtotal' | 'tax' | 'duty';\n  /** Any `ReactNode` elements. */\n  children?: React.ReactNode;\n}\n\ntype CartCostProps = Omit<React.ComponentProps<typeof Money>, 'data'> &\n  CartCostPropsBase;\n\n/**\n * The `CartCost` component renders a `Money` component with the cost associated with the `amountType` prop.\n * If no `amountType` prop is specified, then it defaults to `totalAmount`.\n * Depends on `useCart()` and must be a child of `<CartProvider/>`\n */\nexport function CartCost(props: CartCostProps): JSX.Element | null {\n  const {cost} = useCart();\n  const {amountType = 'total', children, ...passthroughProps} = props;\n  let amount;\n\n  if (amountType == 'total') {\n    amount = cost?.totalAmount;\n  } else if (amountType == 'subtotal') {\n    amount = cost?.subtotalAmount;\n  } else if (amountType == 'tax') {\n    amount = cost?.totalTaxAmount;\n  } else if (amountType == 'duty') {\n    amount = cost?.totalDutyAmount;\n  }\n\n  if (amount == null) {\n    return null;\n  }\n\n  return (\n    <Money {...passthroughProps} data={amount}>\n      {children}\n    </Money>\n  );\n}\n\n// This is only for documenation purposes, and it is not used in the code.\nexport interface CartCostPropsForDocs<AsType extends React.ElementType = 'div'>\n  extends Omit<MoneyPropsBase<AsType>, 'data'>,\n    CartCostPropsBase {}\n"],"mappings":";;;AAkBO,SAASA,SAASC,KAAA,EAA0C;EAC3D;IAACC;EAAA,IAAQC,OAAA;EACf,MAAM;IAACC,UAAA,GAAa;IAASC,QAAA;IAAU,GAAGC;EAAoB,IAAAL,KAAA;EAC1D,IAAAM,MAAA;EAEJ,IAAIH,UAAA,IAAc,SAAS;IACzBG,MAAA,GAASL,IAAA,oBAAAA,IAAA,CAAMM,WAAA;EAAA,WACNJ,UAAA,IAAc,YAAY;IACnCG,MAAA,GAASL,IAAA,oBAAAA,IAAA,CAAMO,cAAA;EAAA,WACNL,UAAA,IAAc,OAAO;IAC9BG,MAAA,GAASL,IAAA,oBAAAA,IAAA,CAAMQ,cAAA;EAAA,WACNN,UAAA,IAAc,QAAQ;IAC/BG,MAAA,GAASL,IAAA,oBAAAA,IAAA,CAAMS,eAAA;EACjB;EAEA,IAAIJ,MAAA,IAAU,MAAM;IACX;EACT;EAEA,sBAAAK,GAAA,CACGC,KAAA,EAAO;IAAA,GAAGP,gBAAA;IAAkBQ,IAAA,EAAMP,MAAA;IAChCF;EACH;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}