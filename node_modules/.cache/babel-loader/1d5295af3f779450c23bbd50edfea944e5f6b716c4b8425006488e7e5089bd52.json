{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport { Money } from \"./Money.mjs\";\nimport { flattenConnection } from \"./flatten-connection.mjs\";\nfunction ProductPrice(props) {\n  var _a, _b, _c, _d, _e, _f;\n  const {\n    priceType = \"regular\",\n    variantId,\n    valueType = \"min\",\n    data: product,\n    ...passthroughProps\n  } = props;\n  if (product == null) {\n    throw new Error(`<ProductPrice/> requires a product as the 'data' prop`);\n  }\n  let price;\n  let measurement;\n  const variant = variantId ? flattenConnection((product == null ? void 0 : product.variants) ?? {}).find(variant2 => (variant2 == null ? void 0 : variant2.id) === variantId) ?? null : null;\n  if (priceType === \"compareAt\") {\n    if (variantId && variant) {\n      if (((_a = variant.compareAtPriceV2) == null ? void 0 : _a.amount) === ((_b = variant.priceV2) == null ? void 0 : _b.amount)) {\n        return null;\n      }\n      price = variant.compareAtPriceV2;\n    } else if (valueType === \"max\") {\n      price = (_c = product == null ? void 0 : product.compareAtPriceRange) == null ? void 0 : _c.maxVariantPrice;\n    } else {\n      price = (_d = product == null ? void 0 : product.compareAtPriceRange) == null ? void 0 : _d.minVariantPrice;\n    }\n  } else {\n    if (variantId && variant) {\n      price = variant.priceV2;\n      if (valueType === \"unit\") {\n        price = variant.unitPrice;\n        measurement = variant.unitPriceMeasurement;\n      }\n    } else if (valueType === \"max\") {\n      price = (_e = product.priceRange) == null ? void 0 : _e.maxVariantPrice;\n    } else {\n      price = (_f = product.priceRange) == null ? void 0 : _f.minVariantPrice;\n    }\n  }\n  if (!price) {\n    return null;\n  }\n  if (measurement) {\n    return /* @__PURE__ */jsx(Money, {\n      ...passthroughProps,\n      data: price,\n      measurement\n    });\n  }\n  return /* @__PURE__ */jsx(Money, {\n    ...passthroughProps,\n    data: price\n  });\n}\nexport { ProductPrice };","map":{"version":3,"names":["ProductPrice","props","priceType","variantId","valueType","data","product","passthroughProps","Error","price","measurement","variant","flattenConnection","variants","find","variant2","id","_a","compareAtPriceV2","amount","_b","priceV2","_c","compareAtPriceRange","maxVariantPrice","_d","minVariantPrice","unitPrice","unitPriceMeasurement","_e","priceRange","_f","jsx","Money"],"sources":["/home/martin/node_modules/.pnpm/@shopify+hydrogen-react@2023.4.0_react-dom@18.2.0_react@18.2.0_typescript@5.0.4/node_modules/@shopify/hydrogen-react/src/ProductPrice.tsx"],"sourcesContent":["import type {\n  MoneyV2,\n  UnitPriceMeasurement,\n  Product,\n} from './storefront-api-types.js';\nimport {Money, type MoneyProps, type MoneyPropsBase} from './Money.js';\nimport type {PartialDeep} from 'type-fest';\nimport {flattenConnection} from './flatten-connection.js';\n\nexport interface ProductPriceProps {\n  /** A Storefront API [Product object](https://shopify.dev/api/storefront/reference/products/product). */\n  data: PartialDeep<Product, {recurseIntoArrays: true}>;\n  /** The type of price. Valid values: `regular` (default) or `compareAt`. */\n  priceType?: 'regular' | 'compareAt';\n  /** The type of value. Valid values: `min` (default), `max` or `unit`. */\n  valueType?: 'max' | 'min' | 'unit';\n  /** The ID of the variant. */\n  variantId?: string;\n}\n\n/**\n * The `ProductPrice` component renders a `Money` component with the product\n * [`priceRange`](https://shopify.dev/api/storefront/reference/products/productpricerange)'s `maxVariantPrice` or `minVariantPrice`, for either the regular price or compare at price range.\n */\nexport function ProductPrice<ComponentGeneric extends React.ElementType>(\n  props: ProductPriceProps &\n    Omit<MoneyProps<ComponentGeneric>, 'data' | 'measurement'>,\n): JSX.Element | null {\n  const {\n    priceType = 'regular',\n    variantId,\n    valueType = 'min',\n    data: product,\n    ...passthroughProps\n  } = props;\n\n  if (product == null) {\n    throw new Error(`<ProductPrice/> requires a product as the 'data' prop`);\n  }\n\n  let price: Partial<MoneyV2> | undefined | null;\n  let measurement: Partial<UnitPriceMeasurement> | undefined | null;\n\n  const variant = variantId\n    ? flattenConnection(product?.variants ?? {}).find(\n        (variant) => variant?.id === variantId,\n      ) ?? null\n    : null;\n\n  if (priceType === 'compareAt') {\n    if (variantId && variant) {\n      if (variant.compareAtPriceV2?.amount === variant.priceV2?.amount) {\n        return null;\n      }\n      price = variant.compareAtPriceV2;\n    } else if (valueType === 'max') {\n      price = product?.compareAtPriceRange?.maxVariantPrice;\n    } else {\n      price = product?.compareAtPriceRange?.minVariantPrice;\n    }\n  } else {\n    if (variantId && variant) {\n      price = variant.priceV2;\n      if (valueType === 'unit') {\n        price = variant.unitPrice;\n        measurement = variant.unitPriceMeasurement;\n      }\n    } else if (valueType === 'max') {\n      price = product.priceRange?.maxVariantPrice;\n    } else {\n      price = product.priceRange?.minVariantPrice;\n    }\n  }\n\n  if (!price) {\n    return null;\n  }\n\n  if (measurement) {\n    return (\n      <Money {...passthroughProps} data={price} measurement={measurement} />\n    );\n  }\n\n  return <Money {...passthroughProps} data={price} />;\n}\n\n// This is only for documenation purposes, and it is not used in the code.\nexport interface ProductPricePropsForDocs<\n  AsType extends React.ElementType = 'div',\n> extends Omit<MoneyPropsBase<AsType>, 'data' | 'measurement'>,\n    ProductPriceProps {}\n"],"mappings":";;;AAwBO,SAASA,aACdC,KAAA,EAEoB;;EACd;IACJC,SAAA,GAAY;IACZC,SAAA;IACAC,SAAA,GAAY;IACZC,IAAA,EAAMC,OAAA;IACN,GAAGC;EACD,IAAAN,KAAA;EAEJ,IAAIK,OAAA,IAAW,MAAM;IACb,UAAIE,KAAA,CAAM,uDAAuD;EACzE;EAEI,IAAAC,KAAA;EACA,IAAAC,WAAA;EAEJ,MAAMC,OAAA,GAAUR,SAAA,GACZS,iBAAA,EAAkBN,OAAA,oBAAAA,OAAA,CAASO,QAAA,KAAY,CAAE,GAAEC,IAAA,CACxCC,QAAA,KAAYA,QAAA,oBAAAA,QAAA,CAASC,EAAA,MAAOb,SAAA,KAC1B,OACL;EAEJ,IAAID,SAAA,KAAc,aAAa;IAC7B,IAAIC,SAAA,IAAaQ,OAAA,EAAS;MACxB,MAAIM,EAAA,GAAAN,OAAA,CAAQO,gBAAA,KAAR,gBAAAD,EAAA,CAA0BE,MAAA,QAAWC,EAAA,GAAAT,OAAA,CAAQU,OAAA,KAAR,gBAAAD,EAAA,CAAiBD,MAAA,GAAQ;QACzD;MACT;MACAV,KAAA,GAAQE,OAAA,CAAQO,gBAAA;IAAA,WACPd,SAAA,KAAc,OAAO;MAC9BK,KAAA,IAAQa,EAAA,GAAAhB,OAAA,oBAAAA,OAAA,CAASiB,mBAAA,KAAT,gBAAAD,EAAA,CAA8BE,eAAA;IAAA,OACjC;MACLf,KAAA,IAAQgB,EAAA,GAAAnB,OAAA,oBAAAA,OAAA,CAASiB,mBAAA,KAAT,gBAAAE,EAAA,CAA8BC,eAAA;IACxC;EAAA,OACK;IACL,IAAIvB,SAAA,IAAaQ,OAAA,EAAS;MACxBF,KAAA,GAAQE,OAAA,CAAQU,OAAA;MAChB,IAAIjB,SAAA,KAAc,QAAQ;QACxBK,KAAA,GAAQE,OAAA,CAAQgB,SAAA;QAChBjB,WAAA,GAAcC,OAAA,CAAQiB,oBAAA;MACxB;IAAA,WACSxB,SAAA,KAAc,OAAO;MAC9BK,KAAA,IAAQoB,EAAA,GAAAvB,OAAA,CAAQwB,UAAA,KAAR,gBAAAD,EAAA,CAAoBL,eAAA;IAAA,OACvB;MACLf,KAAA,IAAQsB,EAAA,GAAAzB,OAAA,CAAQwB,UAAA,KAAR,gBAAAC,EAAA,CAAoBL,eAAA;IAC9B;EACF;EAEA,IAAI,CAACjB,KAAA,EAAO;IACH;EACT;EAEA,IAAIC,WAAA,EAAa;IACf,sBAAAsB,GAAA,CACGC,KAAA,EAAO;MAAA,GAAG1B,gBAAA;MAAkBF,IAAA,EAAMI,KAAA;MAAOC;IAA0B;EAExE;EAEA,OAAQ,eAAAsB,GAAA,CAAAC,KAAA;IAAO,GAAG1B,gBAAA;IAAkBF,IAAA,EAAMI;EAAO;AACnD"},"metadata":{},"sourceType":"module","externalDependencies":[]}