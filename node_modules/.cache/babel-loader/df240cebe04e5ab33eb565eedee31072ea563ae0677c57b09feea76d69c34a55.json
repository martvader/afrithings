{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport { useState, useEffect } from \"react\";\nimport { useCart } from \"./CartProvider.mjs\";\nimport { BaseButton } from \"./BaseButton.mjs\";\nfunction CartCheckoutButton(props) {\n  const [requestedCheckout, setRequestedCheckout] = useState(false);\n  const {\n    status,\n    checkoutUrl\n  } = useCart();\n  const {\n    children,\n    ...passthroughProps\n  } = props;\n  useEffect(() => {\n    if (requestedCheckout && checkoutUrl && status === \"idle\") {\n      window.location.href = checkoutUrl;\n    }\n  }, [requestedCheckout, status, checkoutUrl]);\n  return /* @__PURE__ */jsx(BaseButton, {\n    ...passthroughProps,\n    disabled: requestedCheckout || passthroughProps.disabled,\n    onClick: () => setRequestedCheckout(true),\n    children\n  });\n}\nexport { CartCheckoutButton };","map":{"version":3,"names":["CartCheckoutButton","props","requestedCheckout","setRequestedCheckout","useState","status","checkoutUrl","useCart","children","passthroughProps","useEffect","window","location","href","jsx","BaseButton","disabled","onClick"],"sources":["/home/martin/node_modules/.pnpm/@shopify+hydrogen-react@2023.4.0_react-dom@18.2.0_react@18.2.0_typescript@5.0.4/node_modules/@shopify/hydrogen-react/src/CartCheckoutButton.tsx"],"sourcesContent":["import {ReactNode, useEffect, useState} from 'react';\nimport {useCart} from './CartProvider.js';\nimport {\n  BaseButton,\n  type BaseButtonProps,\n  type CustomBaseButtonProps,\n} from './BaseButton.js';\n\ntype ChildrenProps = {\n  /** A `ReactNode` element. */\n  children: ReactNode;\n};\ntype CartCheckoutButtonProps = Omit<BaseButtonProps<'button'>, 'onClick'> &\n  ChildrenProps;\n\n/**\n * The `CartCheckoutButton` component renders a button that redirects to the checkout URL for the cart.\n * It must be a descendent of a `CartProvider` component.\n */\nexport function CartCheckoutButton(\n  props: CartCheckoutButtonProps,\n): JSX.Element {\n  const [requestedCheckout, setRequestedCheckout] = useState(false);\n  const {status, checkoutUrl} = useCart();\n  const {children, ...passthroughProps} = props;\n\n  useEffect(() => {\n    if (requestedCheckout && checkoutUrl && status === 'idle') {\n      window.location.href = checkoutUrl;\n    }\n  }, [requestedCheckout, status, checkoutUrl]);\n\n  return (\n    <BaseButton\n      {...passthroughProps}\n      disabled={requestedCheckout || passthroughProps.disabled}\n      onClick={(): void => setRequestedCheckout(true)}\n    >\n      {children}\n    </BaseButton>\n  );\n}\n\n// This is only for documentation purposes, and it is not used in the code.\n// we ignore this issue because it makes the documentation look better than the equivalent `type` that it wants us to convert to\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface CartCheckoutButtonPropsForDocs<\n  AsType extends React.ElementType = 'button',\n> extends Omit<CustomBaseButtonProps<AsType>, 'onClick'> {}\n"],"mappings":";;;;AAmBO,SAASA,mBACdC,KAAA,EACa;EACb,MAAM,CAACC,iBAAA,EAAmBC,oBAAoB,IAAIC,QAAA,CAAS,KAAK;EAChE,MAAM;IAACC,MAAA;IAAQC;EAAW,IAAIC,OAAA,CAAQ;EACtC,MAAM;IAACC,QAAA;IAAU,GAAGC;EAAA,IAAoBR,KAAA;EAExCS,SAAA,CAAU,MAAM;IACV,IAAAR,iBAAA,IAAqBI,WAAA,IAAeD,MAAA,KAAW,QAAQ;MACzDM,MAAA,CAAOC,QAAA,CAASC,IAAA,GAAOP,WAAA;IACzB;EACC,IAACJ,iBAAA,EAAmBG,MAAA,EAAQC,WAAW,CAAC;EAGzC,sBAAAQ,GAAA,CAACC,UAAA;IACE,GAAGN,gBAAA;IACJO,QAAA,EAAUd,iBAAA,IAAqBO,gBAAA,CAAiBO,QAAA;IAChDC,OAAA,EAASA,CAAA,KAAYd,oBAAA,CAAqB,IAAI;IAE7CK;EAAA;AAGP"},"metadata":{},"sourceType":"module","externalDependencies":[]}