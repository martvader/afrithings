{"ast":null,"code":"import { __exports as withSelector_development } from \"../../../../_virtual/with-selector.development.mjs\";\nimport React__default from \"react\";\nimport { __require as requireShim } from \"../../shim/index.mjs\";\n/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar hasRequiredWithSelector_development;\nfunction requireWithSelector_development() {\n  if (hasRequiredWithSelector_development) return withSelector_development;\n  hasRequiredWithSelector_development = 1;\n  if (process.env.NODE_ENV !== \"production\") {\n    (function () {\n      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === \"function\") {\n        __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n      }\n      var React = React__default;\n      var shim = requireShim();\n      function is(x, y) {\n        return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;\n      }\n      var objectIs = typeof Object.is === \"function\" ? Object.is : is;\n      var useSyncExternalStore = shim.useSyncExternalStore;\n      var useRef = React.useRef,\n        useEffect = React.useEffect,\n        useMemo = React.useMemo,\n        useDebugValue = React.useDebugValue;\n      function useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n        var instRef = useRef(null);\n        var inst;\n        if (instRef.current === null) {\n          inst = {\n            hasValue: false,\n            value: null\n          };\n          instRef.current = inst;\n        } else {\n          inst = instRef.current;\n        }\n        var _useMemo = useMemo(function () {\n            var hasMemo = false;\n            var memoizedSnapshot;\n            var memoizedSelection;\n            var memoizedSelector = function (nextSnapshot) {\n              if (!hasMemo) {\n                hasMemo = true;\n                memoizedSnapshot = nextSnapshot;\n                var _nextSelection = selector(nextSnapshot);\n                if (isEqual !== void 0) {\n                  if (inst.hasValue) {\n                    var currentSelection = inst.value;\n                    if (isEqual(currentSelection, _nextSelection)) {\n                      memoizedSelection = currentSelection;\n                      return currentSelection;\n                    }\n                  }\n                }\n                memoizedSelection = _nextSelection;\n                return _nextSelection;\n              }\n              var prevSnapshot = memoizedSnapshot;\n              var prevSelection = memoizedSelection;\n              if (objectIs(prevSnapshot, nextSnapshot)) {\n                return prevSelection;\n              }\n              var nextSelection = selector(nextSnapshot);\n              if (isEqual !== void 0 && isEqual(prevSelection, nextSelection)) {\n                return prevSelection;\n              }\n              memoizedSnapshot = nextSnapshot;\n              memoizedSelection = nextSelection;\n              return nextSelection;\n            };\n            var maybeGetServerSnapshot = getServerSnapshot === void 0 ? null : getServerSnapshot;\n            var getSnapshotWithSelector = function () {\n              return memoizedSelector(getSnapshot());\n            };\n            var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? void 0 : function () {\n              return memoizedSelector(maybeGetServerSnapshot());\n            };\n            return [getSnapshotWithSelector, getServerSnapshotWithSelector];\n          }, [getSnapshot, getServerSnapshot, selector, isEqual]),\n          getSelection = _useMemo[0],\n          getServerSelection = _useMemo[1];\n        var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\n        useEffect(function () {\n          inst.hasValue = true;\n          inst.value = value;\n        }, [value]);\n        useDebugValue(value);\n        return value;\n      }\n      withSelector_development.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\n      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === \"function\") {\n        __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n      }\n    })();\n  }\n  return withSelector_development;\n}\nexport { requireWithSelector_development as __require };","map":{"version":3,"names":["process","env","NODE_ENV","__REACT_DEVTOOLS_GLOBAL_HOOK__","registerInternalModuleStart","Error","React","React__default","shim","requireShim","is","x","y","objectIs","Object","useSyncExternalStore","useRef","useEffect","useMemo","useDebugValue","useSyncExternalStoreWithSelector","subscribe","getSnapshot","getServerSnapshot","selector","isEqual","instRef","inst","current","hasValue","value","_useMemo","hasMemo","memoizedSnapshot","memoizedSelection","memoizedSelector","nextSnapshot","_nextSelection","currentSelection","prevSnapshot","prevSelection","nextSelection","maybeGetServerSnapshot","getSnapshotWithSelector","getServerSnapshotWithSelector","getSelection","getServerSelection","withSelector_development","registerInternalModuleStop"],"sources":["/home/martin/node_modules/.pnpm/@shopify+hydrogen-react@2023.4.0_react-dom@18.2.0_react@18.2.0_typescript@5.0.4/node_modules/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js"],"sourcesContent":["/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\nvar shim = require('use-sync-external-store/shim');\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nvar useSyncExternalStore = shim.useSyncExternalStore;\n\n// for CommonJS interop.\n\nvar useRef = React.useRef,\n    useEffect = React.useEffect,\n    useMemo = React.useMemo,\n    useDebugValue = React.useDebugValue; // Same as useSyncExternalStore, but supports selector and isEqual arguments.\n\nfunction useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n  // Use this to track the rendered snapshot.\n  var instRef = useRef(null);\n  var inst;\n\n  if (instRef.current === null) {\n    inst = {\n      hasValue: false,\n      value: null\n    };\n    instRef.current = inst;\n  } else {\n    inst = instRef.current;\n  }\n\n  var _useMemo = useMemo(function () {\n    // Track the memoized state using closure variables that are local to this\n    // memoized instance of a getSnapshot function. Intentionally not using a\n    // useRef hook, because that state would be shared across all concurrent\n    // copies of the hook/component.\n    var hasMemo = false;\n    var memoizedSnapshot;\n    var memoizedSelection;\n\n    var memoizedSelector = function (nextSnapshot) {\n      if (!hasMemo) {\n        // The first time the hook is called, there is no memoized result.\n        hasMemo = true;\n        memoizedSnapshot = nextSnapshot;\n\n        var _nextSelection = selector(nextSnapshot);\n\n        if (isEqual !== undefined) {\n          // Even if the selector has changed, the currently rendered selection\n          // may be equal to the new selection. We should attempt to reuse the\n          // current value if possible, to preserve downstream memoizations.\n          if (inst.hasValue) {\n            var currentSelection = inst.value;\n\n            if (isEqual(currentSelection, _nextSelection)) {\n              memoizedSelection = currentSelection;\n              return currentSelection;\n            }\n          }\n        }\n\n        memoizedSelection = _nextSelection;\n        return _nextSelection;\n      } // We may be able to reuse the previous invocation's result.\n\n\n      // We may be able to reuse the previous invocation's result.\n      var prevSnapshot = memoizedSnapshot;\n      var prevSelection = memoizedSelection;\n\n      if (objectIs(prevSnapshot, nextSnapshot)) {\n        // The snapshot is the same as last time. Reuse the previous selection.\n        return prevSelection;\n      } // The snapshot has changed, so we need to compute a new selection.\n\n\n      // The snapshot has changed, so we need to compute a new selection.\n      var nextSelection = selector(nextSnapshot); // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n\n      // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n      if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\n        return prevSelection;\n      }\n\n      memoizedSnapshot = nextSnapshot;\n      memoizedSelection = nextSelection;\n      return nextSelection;\n    }; // Assigning this to a constant so that Flow knows it can't change.\n\n\n    // Assigning this to a constant so that Flow knows it can't change.\n    var maybeGetServerSnapshot = getServerSnapshot === undefined ? null : getServerSnapshot;\n\n    var getSnapshotWithSelector = function () {\n      return memoizedSelector(getSnapshot());\n    };\n\n    var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? undefined : function () {\n      return memoizedSelector(maybeGetServerSnapshot());\n    };\n    return [getSnapshotWithSelector, getServerSnapshotWithSelector];\n  }, [getSnapshot, getServerSnapshot, selector, isEqual]),\n      getSelection = _useMemo[0],\n      getServerSelection = _useMemo[1];\n\n  var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\n  useEffect(function () {\n    inst.hasValue = true;\n    inst.value = value;\n  }, [value]);\n  useDebugValue(value);\n  return value;\n}\n\nexports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n"],"mappings":";;;;;;;;;;;;;;;;EAYA,IAAIA,OAAA,CAAQC,GAAA,CAAIC,QAAA,KAAa,cAAc;IACzC,CAAC,YAAW;MAKd,IACE,OAAOC,8BAAA,KAAmC,eAC1C,OAAOA,8BAAA,CAA+BC,2BAAA,KACpC,YACF;QACAD,8BAAA,CAA+BC,2BAAA,CAA4B,IAAIC,KAAA,CAAK,CAAE;MACvE;MACS,IAAIC,KAAA,GAAQC,cAAA;MACtB,IAAIC,IAAA,GAAOC,WAAA;MAMX,SAASC,GAAGC,CAAA,EAAGC,CAAA,EAAG;QAChB,OAAOD,CAAA,KAAMC,CAAA,KAAMD,CAAA,KAAM,KAAK,IAAIA,CAAA,KAAM,IAAIC,CAAA,KAAMD,CAAA,KAAMA,CAAA,IAAKC,CAAA,KAAMA,CAAA;MAEpE;MAED,IAAIC,QAAA,GAAW,OAAOC,MAAA,CAAOJ,EAAA,KAAO,aAAaI,MAAA,CAAOJ,EAAA,GAAKA,EAAA;MAE7D,IAAIK,oBAAA,GAAuBP,IAAA,CAAKO,oBAAA;MAIhC,IAAIC,MAAA,GAASV,KAAA,CAAMU,MAAA;QACfC,SAAA,GAAYX,KAAA,CAAMW,SAAA;QAClBC,OAAA,GAAUZ,KAAA,CAAMY,OAAA;QAChBC,aAAA,GAAgBb,KAAA,CAAMa,aAAA;MAE1B,SAASC,iCAAiCC,SAAA,EAAWC,WAAA,EAAaC,iBAAA,EAAmBC,QAAA,EAAUC,OAAA,EAAS;QAEtG,IAAIC,OAAA,GAAUV,MAAA,CAAO,IAAI;QACzB,IAAIW,IAAA;QAEJ,IAAID,OAAA,CAAQE,OAAA,KAAY,MAAM;UAC5BD,IAAA,GAAO;YACLE,QAAA,EAAU;YACVC,KAAA,EAAO;UACb;UACIJ,OAAA,CAAQE,OAAA,GAAUD,IAAA;QACtB,OAAS;UACLA,IAAA,GAAOD,OAAA,CAAQE,OAAA;QAChB;QAED,IAAIG,QAAA,GAAWb,OAAA,CAAQ,YAAY;YAKjC,IAAIc,OAAA,GAAU;YACd,IAAIC,gBAAA;YACJ,IAAIC,iBAAA;YAEJ,IAAIC,gBAAA,GAAmB,SAAAA,CAAUC,YAAA,EAAc;cAC7C,IAAI,CAACJ,OAAA,EAAS;gBAEZA,OAAA,GAAU;gBACVC,gBAAA,GAAmBG,YAAA;gBAEnB,IAAIC,cAAA,GAAiBb,QAAA,CAASY,YAAY;gBAE1C,IAAIX,OAAA,KAAY,QAAW;kBAIzB,IAAIE,IAAA,CAAKE,QAAA,EAAU;oBACjB,IAAIS,gBAAA,GAAmBX,IAAA,CAAKG,KAAA;oBAE5B,IAAIL,OAAA,CAAQa,gBAAA,EAAkBD,cAAc,GAAG;sBAC7CH,iBAAA,GAAoBI,gBAAA;sBACpB,OAAOA,gBAAA;oBACR;kBACF;gBACF;gBAEDJ,iBAAA,GAAoBG,cAAA;gBACpB,OAAOA,cAAA;cACR;cAID,IAAIE,YAAA,GAAeN,gBAAA;cACnB,IAAIO,aAAA,GAAgBN,iBAAA;cAEpB,IAAIrB,QAAA,CAAS0B,YAAA,EAAcH,YAAY,GAAG;gBAExC,OAAOI,aAAA;cACR;cAID,IAAIC,aAAA,GAAgBjB,QAAA,CAASY,YAAY;cASzC,IAAIX,OAAA,KAAY,UAAaA,OAAA,CAAQe,aAAA,EAAeC,aAAa,GAAG;gBAClE,OAAOD,aAAA;cACR;cAEDP,gBAAA,GAAmBG,YAAA;cACnBF,iBAAA,GAAoBO,aAAA;cACpB,OAAOA,aAAA;YACb;YAII,IAAIC,sBAAA,GAAyBnB,iBAAA,KAAsB,SAAY,OAAOA,iBAAA;YAEtE,IAAIoB,uBAAA,GAA0B,SAAAA,CAAA,EAAY;cACxC,OAAOR,gBAAA,CAAiBb,WAAA,CAAW,CAAE;YAC3C;YAEI,IAAIsB,6BAAA,GAAgCF,sBAAA,KAA2B,OAAO,SAAY,YAAY;cAC5F,OAAOP,gBAAA,CAAiBO,sBAAA,CAAsB,CAAE;YACtD;YACI,OAAO,CAACC,uBAAA,EAAyBC,6BAA6B;UAC/D,GAAE,CAACtB,WAAA,EAAaC,iBAAA,EAAmBC,QAAA,EAAUC,OAAO,CAAC;UAClDoB,YAAA,GAAed,QAAA,CAAS,CAAC;UACzBe,kBAAA,GAAqBf,QAAA,CAAS,CAAC;QAEnC,IAAID,KAAA,GAAQf,oBAAA,CAAqBM,SAAA,EAAWwB,YAAA,EAAcC,kBAAkB;QAC5E7B,SAAA,CAAU,YAAY;UACpBU,IAAA,CAAKE,QAAA,GAAW;UAChBF,IAAA,CAAKG,KAAA,GAAQA,KAAA;QACjB,GAAK,CAACA,KAAK,CAAC;QACVX,aAAA,CAAcW,KAAK;QACnB,OAAOA,KAAA;MACR;MAEuCiB,wBAAA,CAAA3B,gCAAA,GAAGA,gCAAA;MAE3C,IACE,OAAOjB,8BAAA,KAAmC,eAC1C,OAAOA,8BAAA,CAA+B6C,0BAAA,KACpC,YACF;QACA7C,8BAAA,CAA+B6C,0BAAA,CAA2B,IAAI3C,KAAA,CAAK,CAAE;MACtE;IAED;EACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}