{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { useLoadScript } from \"./load-script.mjs\";\nfunction ModelViewer(props) {\n  var _a, _b, _c;\n  const [modelViewer, setModelViewer] = useState(void 0);\n  const callbackRef = useCallback(node => {\n    setModelViewer(node);\n  }, []);\n  const {\n    data,\n    children,\n    className,\n    ...passthroughProps\n  } = props;\n  const modelViewerLoadedStatus = useLoadScript(\"https://unpkg.com/@google/model-viewer@v1.12.1/dist/model-viewer.min.js\", {\n    module: true\n  });\n  useEffect(() => {\n    if (!modelViewer) {\n      return;\n    }\n    if (passthroughProps.onError) modelViewer.addEventListener(\"error\", passthroughProps.onError);\n    if (passthroughProps.onLoad) modelViewer.addEventListener(\"load\", passthroughProps.onLoad);\n    if (passthroughProps.onPreload) modelViewer.addEventListener(\"preload\", passthroughProps.onPreload);\n    if (passthroughProps.onModelVisibility) modelViewer.addEventListener(\"model-visibility\", passthroughProps.onModelVisibility);\n    if (passthroughProps.onProgress) modelViewer.addEventListener(\"progress\", passthroughProps.onProgress);\n    if (passthroughProps.onArStatus) modelViewer.addEventListener(\"ar-status\", passthroughProps.onArStatus);\n    if (passthroughProps.onArTracking) modelViewer.addEventListener(\"ar-tracking\", passthroughProps.onArTracking);\n    if (passthroughProps.onQuickLookButtonTapped) modelViewer.addEventListener(\"quick-look-button-tapped\", passthroughProps.onQuickLookButtonTapped);\n    if (passthroughProps.onCameraChange) modelViewer.addEventListener(\"camera-change\", passthroughProps.onCameraChange);\n    if (passthroughProps.onEnvironmentChange) modelViewer.addEventListener(\"environment-change\", passthroughProps.onEnvironmentChange);\n    if (passthroughProps.onPlay) modelViewer.addEventListener(\"play\", passthroughProps.onPlay);\n    if (passthroughProps.onPause) modelViewer.addEventListener(\"ar-status\", passthroughProps.onPause);\n    if (passthroughProps.onSceneGraphReady) modelViewer.addEventListener(\"scene-graph-ready\", passthroughProps.onSceneGraphReady);\n    return () => {\n      if (modelViewer == null) {\n        return;\n      }\n      if (passthroughProps.onError) modelViewer.removeEventListener(\"error\", passthroughProps.onError);\n      if (passthroughProps.onLoad) modelViewer.removeEventListener(\"load\", passthroughProps.onLoad);\n      if (passthroughProps.onPreload) modelViewer.removeEventListener(\"preload\", passthroughProps.onPreload);\n      if (passthroughProps.onModelVisibility) modelViewer.removeEventListener(\"model-visibility\", passthroughProps.onModelVisibility);\n      if (passthroughProps.onProgress) modelViewer.removeEventListener(\"progress\", passthroughProps.onProgress);\n      if (passthroughProps.onArStatus) modelViewer.removeEventListener(\"ar-status\", passthroughProps.onArStatus);\n      if (passthroughProps.onArTracking) modelViewer.removeEventListener(\"ar-tracking\", passthroughProps.onArTracking);\n      if (passthroughProps.onQuickLookButtonTapped) modelViewer.removeEventListener(\"quick-look-button-tapped\", passthroughProps.onQuickLookButtonTapped);\n      if (passthroughProps.onCameraChange) modelViewer.removeEventListener(\"camera-change\", passthroughProps.onCameraChange);\n      if (passthroughProps.onEnvironmentChange) modelViewer.removeEventListener(\"environment-change\", passthroughProps.onEnvironmentChange);\n      if (passthroughProps.onPlay) modelViewer.removeEventListener(\"play\", passthroughProps.onPlay);\n      if (passthroughProps.onPause) modelViewer.removeEventListener(\"ar-status\", passthroughProps.onPause);\n      if (passthroughProps.onSceneGraphReady) modelViewer.removeEventListener(\"scene-graph-ready\", passthroughProps.onSceneGraphReady);\n    };\n  }, [modelViewer, passthroughProps.onArStatus, passthroughProps.onArTracking, passthroughProps.onCameraChange, passthroughProps.onEnvironmentChange, passthroughProps.onError, passthroughProps.onLoad, passthroughProps.onModelVisibility, passthroughProps.onPause, passthroughProps.onPlay, passthroughProps.onPreload, passthroughProps.onProgress, passthroughProps.onQuickLookButtonTapped, passthroughProps.onSceneGraphReady]);\n  if (modelViewerLoadedStatus !== \"done\") {\n    return null;\n  }\n  if (!((_b = (_a = data.sources) == null ? void 0 : _a[0]) == null ? void 0 : _b.url)) {\n    const sourcesUrlError = `<ModelViewer/> requires 'data.sources' prop to be an array, with an object that has a property 'url' on it. Rendering 'null'`;\n    {\n      throw new Error(sourcesUrlError);\n    }\n  }\n  if (!data.alt) {\n    console.warn(`<ModelViewer/> requires the 'data.alt' prop for accessibility`);\n  }\n  return /* @__PURE__ */jsx(\"model-viewer\", {\n    ref: callbackRef,\n    ...passthroughProps,\n    className,\n    id: passthroughProps.id ?? data.id,\n    src: data.sources[0].url,\n    alt: data.alt ?? null,\n    \"camera-controls\": passthroughProps.cameraControls ?? true,\n    poster: (passthroughProps.poster || ((_c = data.previewImage) == null ? void 0 : _c.url)) ?? null,\n    autoplay: passthroughProps.autoplay ?? true,\n    loading: passthroughProps.loading,\n    reveal: passthroughProps.reveal,\n    ar: passthroughProps.ar,\n    \"ar-modes\": passthroughProps.arModes,\n    \"ar-scale\": passthroughProps.arScale,\n    \"ar-placement\": passthroughProps.arPlacement,\n    \"ios-src\": passthroughProps.iosSrc,\n    \"touch-action\": passthroughProps.touchAction,\n    \"disable-zoom\": passthroughProps.disableZoom,\n    \"orbit-sensitivity\": passthroughProps.orbitSensitivity,\n    \"auto-rotate\": passthroughProps.autoRotate,\n    \"auto-rotate-delay\": passthroughProps.autoRotateDelay,\n    \"rotation-per-second\": passthroughProps.rotationPerSecond,\n    \"interaction-policy\": passthroughProps.interactionPolicy,\n    \"interaction-prompt\": passthroughProps.interactionPrompt,\n    \"interaction-prompt-style\": passthroughProps.interactionPromptStyle,\n    \"interaction-prompt-threshold\": passthroughProps.interactionPromptThreshold,\n    \"camera-orbit\": passthroughProps.cameraOrbit,\n    \"camera-target\": passthroughProps.cameraTarget,\n    \"field-of-view\": passthroughProps.fieldOfView,\n    \"max-camera-orbit\": passthroughProps.maxCameraOrbit,\n    \"min-camera-orbit\": passthroughProps.minCameraOrbit,\n    \"max-field-of-view\": passthroughProps.maxFieldOfView,\n    \"min-field-of-view\": passthroughProps.minFieldOfView,\n    bounds: passthroughProps.bounds,\n    \"interpolation-decay\": passthroughProps.interpolationDecay ?? 100,\n    \"skybox-image\": passthroughProps.skyboxImage,\n    \"environment-image\": passthroughProps.environmentImage,\n    exposure: passthroughProps.exposure,\n    \"shadow-intensity\": passthroughProps.shadowIntensity ?? 0,\n    \"shadow-softness\": passthroughProps.shadowSoftness ?? 0,\n    \"animation-name\": passthroughProps.animationName,\n    \"animation-crossfade-duration\": passthroughProps.animationCrossfadeDuration,\n    \"variant-name\": passthroughProps.variantName,\n    orientation: passthroughProps.orientation,\n    scale: passthroughProps.scale,\n    children\n  });\n}\nexport { ModelViewer };","map":{"version":3,"names":["ModelViewer","props","modelViewer","setModelViewer","useState","callbackRef","useCallback","node","data","children","className","passthroughProps","modelViewerLoadedStatus","useLoadScript","module","useEffect","onError","addEventListener","onLoad","onPreload","onModelVisibility","onProgress","onArStatus","onArTracking","onQuickLookButtonTapped","onCameraChange","onEnvironmentChange","onPlay","onPause","onSceneGraphReady","removeEventListener","_b","_a","sources","url","sourcesUrlError","Error","alt","console","warn","jsx","ref","id","src","cameraControls","poster","_c","previewImage","autoplay","loading","reveal","ar","arModes","arScale","arPlacement","iosSrc","touchAction","disableZoom","orbitSensitivity","autoRotate","autoRotateDelay","rotationPerSecond","interactionPolicy","interactionPrompt","interactionPromptStyle","interactionPromptThreshold","cameraOrbit","cameraTarget","fieldOfView","maxCameraOrbit","minCameraOrbit","maxFieldOfView","minFieldOfView","bounds","interpolationDecay","skyboxImage","environmentImage","exposure","shadowIntensity","shadowSoftness","animationName","animationCrossfadeDuration","variantName","orientation","scale"],"sources":["/home/martin/node_modules/.pnpm/@shopify+hydrogen-react@2023.4.0_react-dom@18.2.0_react@18.2.0_typescript@5.0.4/node_modules/@shopify/hydrogen-react/src/ModelViewer.tsx"],"sourcesContent":["import {useState, useEffect, useCallback} from 'react';\nimport {useLoadScript} from './load-script.js';\nimport type {Model3d} from './storefront-api-types.js';\nimport type {PartialDeep} from 'type-fest';\nimport type {ModelViewerElement} from '@google/model-viewer/lib/model-viewer.js';\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace JSX {\n    interface IntrinsicElements {\n      'model-viewer': PartialDeep<\n        ModelViewerElement,\n        {recurseIntoArrays: true}\n      >;\n    }\n  }\n}\n\ntype ModelViewerProps = Omit<\n  PartialDeep<JSX.IntrinsicElements['model-viewer'], {recurseIntoArrays: true}>,\n  'src'\n> &\n  ModelViewerBaseProps;\n\ntype ModelViewerBaseProps = {\n  /** An object with fields that correspond to the Storefront API's [Model3D object](https://shopify.dev/api/storefront/2023-04/objects/model3d). */\n  data: PartialDeep<Model3d, {recurseIntoArrays: true}>;\n  /** The callback to invoke when the 'error' event is triggered. Refer to [error in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-error). */\n  onError?: (event: Event) => void;\n  /** The callback to invoke when the `load` event is triggered. Refer to [load in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-load). */\n  onLoad?: (event: Event) => void;\n  /** The callback to invoke when the 'preload' event is triggered. Refer to [preload in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-preload). */\n  onPreload?: (event: Event) => void;\n  /** The callback to invoke when the 'model-visibility' event is triggered. Refer to [model-visibility in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-modelVisibility). */\n  onModelVisibility?: (event: Event) => void;\n  /** The callback to invoke when the 'progress' event is triggered. Refer to [progress in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-loading-events-progress). */\n  onProgress?: (event: Event) => void;\n  /** The callback to invoke when the 'ar-status' event is triggered. Refer to [ar-status in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-augmentedreality-events-arStatus). */\n  onArStatus?: (event: Event) => void;\n  /** The callback to invoke when the 'ar-tracking' event is triggered. Refer to [ar-tracking in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-augmentedreality-events-arTracking). */\n  onArTracking?: (event: Event) => void;\n  /** The callback to invoke when the 'quick-look-button-tapped' event is triggered. Refer to [quick-look-button-tapped in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-augmentedreality-events-quickLookButtonTapped). */\n  onQuickLookButtonTapped?: (event: Event) => void;\n  /** The callback to invoke when the 'camera-change' event is triggered. Refer to [camera-change in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-stagingandcameras-events-cameraChange). */\n  onCameraChange?: (event: Event) => void;\n  /** The callback to invoke when the 'environment-change' event is triggered. Refer to [environment-change in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-lightingandenv-events-environmentChange).  */\n  onEnvironmentChange?: (event: Event) => void;\n  /**  The callback to invoke when the 'play' event is triggered. Refer to [play in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-animation-events-play). */\n  onPlay?: (event: Event) => void;\n  /**  The callback to invoke when the 'pause' event is triggered. Refer to [pause in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-animation-events-pause). */\n  onPause?: (event: Event) => void;\n  /** The callback to invoke when the 'scene-graph-ready' event is triggered. Refer to [scene-graph-ready in the <model-viewer> documentation](https://modelviewer.dev/docs/index.html#entrydocs-scenegraph-events-sceneGraphReady). */\n  onSceneGraphReady?: (event: Event) => void;\n};\n\n/**\n * The `ModelViewer` component renders a 3D model (with the `model-viewer` custom element) for\n * the Storefront API's [Model3d object](https://shopify.dev/api/storefront/reference/products/model3d).\n *\n * The `model-viewer` custom element is lazily downloaded through a dynamically-injected `<script type=\"module\">` tag when the `<ModelViewer />` component is rendered\n *\n * ModelViewer is using version `1.21.1` of the `@google/model-viewer` library.\n */\nexport function ModelViewer(props: ModelViewerProps): JSX.Element | null {\n  const [modelViewer, setModelViewer] = useState<undefined | HTMLElement>(\n    undefined,\n  );\n  const callbackRef = useCallback((node: HTMLElement) => {\n    setModelViewer(node);\n  }, []);\n  const {data, children, className, ...passthroughProps} = props;\n\n  const modelViewerLoadedStatus = useLoadScript(\n    'https://unpkg.com/@google/model-viewer@v1.12.1/dist/model-viewer.min.js',\n    {\n      module: true,\n    },\n  );\n\n  useEffect(() => {\n    if (!modelViewer) {\n      return;\n    }\n    if (passthroughProps.onError)\n      modelViewer.addEventListener('error', passthroughProps.onError);\n    if (passthroughProps.onLoad)\n      modelViewer.addEventListener('load', passthroughProps.onLoad);\n    if (passthroughProps.onPreload)\n      modelViewer.addEventListener('preload', passthroughProps.onPreload);\n    if (passthroughProps.onModelVisibility)\n      modelViewer.addEventListener(\n        'model-visibility',\n        passthroughProps.onModelVisibility,\n      );\n    if (passthroughProps.onProgress)\n      modelViewer.addEventListener('progress', passthroughProps.onProgress);\n    if (passthroughProps.onArStatus)\n      modelViewer.addEventListener('ar-status', passthroughProps.onArStatus);\n    if (passthroughProps.onArTracking)\n      modelViewer.addEventListener(\n        'ar-tracking',\n        passthroughProps.onArTracking,\n      );\n    if (passthroughProps.onQuickLookButtonTapped)\n      modelViewer.addEventListener(\n        'quick-look-button-tapped',\n        passthroughProps.onQuickLookButtonTapped,\n      );\n    if (passthroughProps.onCameraChange)\n      modelViewer.addEventListener(\n        'camera-change',\n        passthroughProps.onCameraChange,\n      );\n    if (passthroughProps.onEnvironmentChange)\n      modelViewer.addEventListener(\n        'environment-change',\n        passthroughProps.onEnvironmentChange,\n      );\n    if (passthroughProps.onPlay)\n      modelViewer.addEventListener('play', passthroughProps.onPlay);\n    if (passthroughProps.onPause)\n      modelViewer.addEventListener('ar-status', passthroughProps.onPause);\n    if (passthroughProps.onSceneGraphReady)\n      modelViewer.addEventListener(\n        'scene-graph-ready',\n        passthroughProps.onSceneGraphReady,\n      );\n\n    return () => {\n      if (modelViewer == null) {\n        return;\n      }\n      if (passthroughProps.onError)\n        modelViewer.removeEventListener('error', passthroughProps.onError);\n      if (passthroughProps.onLoad)\n        modelViewer.removeEventListener('load', passthroughProps.onLoad);\n      if (passthroughProps.onPreload)\n        modelViewer.removeEventListener('preload', passthroughProps.onPreload);\n      if (passthroughProps.onModelVisibility)\n        modelViewer.removeEventListener(\n          'model-visibility',\n          passthroughProps.onModelVisibility,\n        );\n      if (passthroughProps.onProgress)\n        modelViewer.removeEventListener(\n          'progress',\n          passthroughProps.onProgress,\n        );\n      if (passthroughProps.onArStatus)\n        modelViewer.removeEventListener(\n          'ar-status',\n          passthroughProps.onArStatus,\n        );\n      if (passthroughProps.onArTracking)\n        modelViewer.removeEventListener(\n          'ar-tracking',\n          passthroughProps.onArTracking,\n        );\n      if (passthroughProps.onQuickLookButtonTapped)\n        modelViewer.removeEventListener(\n          'quick-look-button-tapped',\n          passthroughProps.onQuickLookButtonTapped,\n        );\n      if (passthroughProps.onCameraChange)\n        modelViewer.removeEventListener(\n          'camera-change',\n          passthroughProps.onCameraChange,\n        );\n      if (passthroughProps.onEnvironmentChange)\n        modelViewer.removeEventListener(\n          'environment-change',\n          passthroughProps.onEnvironmentChange,\n        );\n      if (passthroughProps.onPlay)\n        modelViewer.removeEventListener('play', passthroughProps.onPlay);\n      if (passthroughProps.onPause)\n        modelViewer.removeEventListener('ar-status', passthroughProps.onPause);\n      if (passthroughProps.onSceneGraphReady)\n        modelViewer.removeEventListener(\n          'scene-graph-ready',\n          passthroughProps.onSceneGraphReady,\n        );\n    };\n  }, [\n    modelViewer,\n    passthroughProps.onArStatus,\n    passthroughProps.onArTracking,\n    passthroughProps.onCameraChange,\n    passthroughProps.onEnvironmentChange,\n    passthroughProps.onError,\n    passthroughProps.onLoad,\n    passthroughProps.onModelVisibility,\n    passthroughProps.onPause,\n    passthroughProps.onPlay,\n    passthroughProps.onPreload,\n    passthroughProps.onProgress,\n    passthroughProps.onQuickLookButtonTapped,\n    passthroughProps.onSceneGraphReady,\n  ]);\n\n  if (modelViewerLoadedStatus !== 'done') {\n    // TODO: What do we want to display while the model-viewer library loads?\n    return null;\n  }\n\n  if (!data.sources?.[0]?.url) {\n    const sourcesUrlError = `<ModelViewer/> requires 'data.sources' prop to be an array, with an object that has a property 'url' on it. Rendering 'null'`;\n    if (__HYDROGEN_DEV__) {\n      throw new Error(sourcesUrlError);\n    } else {\n      console.error(sourcesUrlError);\n      return null;\n    }\n  }\n\n  if (__HYDROGEN_DEV__ && !data.alt) {\n    console.warn(\n      `<ModelViewer/> requires the 'data.alt' prop for accessibility`,\n    );\n  }\n\n  return (\n    <model-viewer\n      // @ts-expect-error ref should exist\n      ref={callbackRef}\n      {...passthroughProps}\n      className={className}\n      id={passthroughProps.id ?? data.id}\n      src={data.sources[0].url}\n      alt={data.alt ?? null}\n      camera-controls={passthroughProps.cameraControls ?? true}\n      poster={(passthroughProps.poster || data.previewImage?.url) ?? null}\n      autoplay={passthroughProps.autoplay ?? true}\n      loading={passthroughProps.loading}\n      reveal={passthroughProps.reveal}\n      ar={passthroughProps.ar}\n      ar-modes={passthroughProps.arModes}\n      ar-scale={passthroughProps.arScale}\n      // @ts-expect-error arPlacement should exist as a type, not sure why it doesn't. https://modelviewer.dev/docs/index.html#entrydocs-augmentedreality-attributes-arPlacement\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      ar-placement={passthroughProps.arPlacement}\n      ios-src={passthroughProps.iosSrc}\n      touch-action={passthroughProps.touchAction}\n      disable-zoom={passthroughProps.disableZoom}\n      orbit-sensitivity={passthroughProps.orbitSensitivity}\n      auto-rotate={passthroughProps.autoRotate}\n      auto-rotate-delay={passthroughProps.autoRotateDelay}\n      // @ts-expect-error rotationPerSecond should exist as a type, not sure why it doesn't. https://modelviewer.dev/docs/index.html#entrydocs-stagingandcameras-attributes-rotationPerSecond\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      rotation-per-second={passthroughProps.rotationPerSecond}\n      interaction-policy={passthroughProps.interactionPolicy}\n      interaction-prompt={passthroughProps.interactionPrompt}\n      interaction-prompt-style={passthroughProps.interactionPromptStyle}\n      interaction-prompt-threshold={passthroughProps.interactionPromptThreshold}\n      camera-orbit={passthroughProps.cameraOrbit}\n      camera-target={passthroughProps.cameraTarget}\n      field-of-view={passthroughProps.fieldOfView}\n      max-camera-orbit={passthroughProps.maxCameraOrbit}\n      min-camera-orbit={passthroughProps.minCameraOrbit}\n      max-field-of-view={passthroughProps.maxFieldOfView}\n      min-field-of-view={passthroughProps.minFieldOfView}\n      bounds={passthroughProps.bounds}\n      interpolation-decay={passthroughProps.interpolationDecay ?? 100}\n      skybox-image={passthroughProps.skyboxImage}\n      environment-image={passthroughProps.environmentImage}\n      exposure={passthroughProps.exposure}\n      shadow-intensity={passthroughProps.shadowIntensity ?? 0}\n      shadow-softness={passthroughProps.shadowSoftness ?? 0}\n      animation-name={passthroughProps.animationName}\n      animation-crossfade-duration={passthroughProps.animationCrossfadeDuration}\n      variant-name={passthroughProps.variantName}\n      orientation={passthroughProps.orientation}\n      scale={passthroughProps.scale}\n    >\n      {children}\n    </model-viewer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}