{"ast":null,"code":"import { SHOPIFY_Y, SHOPIFY_S } from \"./cart-constants.mjs\";\nimport { AnalyticsEventName } from \"./analytics-constants.mjs\";\nimport { errorIfServer } from \"./analytics-utils.mjs\";\nimport { getShopifyCookies } from \"./cookies-utils.mjs\";\nimport { pageView } from \"./analytics-schema-trekkie-storefront-page-view.mjs\";\nimport { pageView as pageView$1, addToCart } from \"./analytics-schema-custom-storefront-customer-tracking.mjs\";\nfunction sendShopifyAnalytics(event, shopDomain) {\n  const {\n    eventName,\n    payload\n  } = event;\n  if (!payload.hasUserConsent) return Promise.resolve();\n  let events = [];\n  if (eventName === AnalyticsEventName.PAGE_VIEW) {\n    const pageViewPayload = payload;\n    events = events.concat(pageView(pageViewPayload), pageView$1(pageViewPayload));\n  } else if (eventName === AnalyticsEventName.ADD_TO_CART) {\n    events = events.concat(addToCart(payload));\n  }\n  if (events.length) {\n    return sendToShopify(events, shopDomain);\n  } else {\n    return Promise.resolve();\n  }\n}\nconst ERROR_MESSAGE = \"sendShopifyAnalytics request is unsuccessful\";\nfunction sendToShopify(events, shopDomain) {\n  const eventsToBeSent = {\n    events,\n    metadata: {\n      event_sent_at_ms: Date.now()\n    }\n  };\n  try {\n    return fetch(shopDomain ? `https://${shopDomain}/.well-known/shopify/monorail/unstable/produce_batch` : \"https://monorail-edge.shopifysvc.com/unstable/produce_batch\", {\n      method: \"post\",\n      headers: {\n        \"content-type\": \"text/plain\"\n      },\n      body: JSON.stringify(eventsToBeSent)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Response failed\");\n      }\n      return response.text();\n    }).then(data => {\n      if (data) {\n        const jsonResponse = JSON.parse(data);\n        jsonResponse.result.forEach(eventResponse => {\n          if (eventResponse.status !== 200) {\n            console.error(ERROR_MESSAGE, \"\\n\\n\", eventResponse.message);\n          }\n        });\n      }\n    }).catch(err => {\n      console.error(ERROR_MESSAGE, err);\n      if (true) {\n        throw new Error(ERROR_MESSAGE);\n      }\n    });\n  } catch (error) {\n    return Promise.resolve();\n  }\n}\nfunction getClientBrowserParameters() {\n  if (errorIfServer(\"getClientBrowserParameters\")) {\n    return {\n      uniqueToken: \"\",\n      visitToken: \"\",\n      url: \"\",\n      path: \"\",\n      search: \"\",\n      referrer: \"\",\n      title: \"\",\n      userAgent: \"\",\n      navigationType: \"\",\n      navigationApi: \"\"\n    };\n  }\n  const [navigationType, navigationApi] = getNavigationType();\n  const cookies = getShopifyCookies(document.cookie);\n  return {\n    uniqueToken: cookies[SHOPIFY_Y],\n    visitToken: cookies[SHOPIFY_S],\n    url: location.href,\n    path: location.pathname,\n    search: location.search,\n    referrer: document.referrer,\n    title: document.title,\n    userAgent: navigator.userAgent,\n    navigationType,\n    navigationApi\n  };\n}\nfunction getNavigationTypeExperimental() {\n  try {\n    const navigationEntries = (performance == null ? void 0 : performance.getEntriesByType) && (performance == null ? void 0 : performance.getEntriesByType(\"navigation\"));\n    if (navigationEntries && navigationEntries[0]) {\n      const rawType = window.performance.getEntriesByType(\"navigation\")[0][\"type\"];\n      const navType = rawType && rawType.toString();\n      return navType;\n    }\n  } catch (err) {}\n  return void 0;\n}\nfunction getNavigationTypeLegacy() {\n  var _a, _b;\n  try {\n    if (PerformanceNavigation && ((_a = performance == null ? void 0 : performance.navigation) == null ? void 0 : _a.type) !== null && ((_b = performance == null ? void 0 : performance.navigation) == null ? void 0 : _b.type) !== void 0) {\n      const rawType = performance.navigation.type;\n      switch (rawType) {\n        case PerformanceNavigation.TYPE_NAVIGATE:\n          return \"navigate\";\n          break;\n        case PerformanceNavigation.TYPE_RELOAD:\n          return \"reload\";\n          break;\n        case PerformanceNavigation.TYPE_BACK_FORWARD:\n          return \"back_forward\";\n          break;\n        default:\n          return `unknown: ${rawType}`;\n      }\n    }\n  } catch (err) {}\n  return void 0;\n}\nfunction getNavigationType() {\n  try {\n    let navApi = \"PerformanceNavigationTiming\";\n    let navType = getNavigationTypeExperimental();\n    if (!navType) {\n      navType = getNavigationTypeLegacy();\n      navApi = \"performance.navigation\";\n    }\n    if (navType) {\n      return [navType, navApi];\n    } else {\n      return [\"unknown\", \"unknown\"];\n    }\n  } catch (err) {}\n  return [\"error\", \"error\"];\n}\nexport { getClientBrowserParameters, sendShopifyAnalytics };","map":{"version":3,"names":["sendShopifyAnalytics","event","shopDomain","eventName","payload","hasUserConsent","Promise","resolve","events","AnalyticsEventName","PAGE_VIEW","pageViewPayload","concat","pageView","pageView$1","ADD_TO_CART","addToCart","length","sendToShopify","ERROR_MESSAGE","eventsToBeSent","metadata","event_sent_at_ms","Date","now","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","text","data","jsonResponse","parse","result","forEach","eventResponse","status","console","error","message","catch","err","getClientBrowserParameters","errorIfServer","uniqueToken","visitToken","url","path","search","referrer","title","userAgent","navigationType","navigationApi","getNavigationType","cookies","getShopifyCookies","document","cookie","SHOPIFY_Y","SHOPIFY_S","location","href","pathname","navigator","getNavigationTypeExperimental","navigationEntries","performance","getEntriesByType","rawType","window","navType","toString","getNavigationTypeLegacy","PerformanceNavigation","_a","navigation","type","_b","TYPE_NAVIGATE","TYPE_RELOAD","TYPE_BACK_FORWARD","navApi"],"sources":["/home/martin/node_modules/.pnpm/@shopify+hydrogen-react@2023.4.0_react-dom@18.2.0_react@18.2.0_typescript@5.0.4/node_modules/@shopify/hydrogen-react/src/analytics.ts"],"sourcesContent":["import {SHOPIFY_S, SHOPIFY_Y} from './cart-constants.js';\nimport type {\n  ClientBrowserParameters,\n  ShopifyAddToCartPayload,\n  ShopifyAnalytics,\n  ShopifyPageViewPayload,\n  ShopifyMonorailEvent,\n} from './analytics-types.js';\nimport {AnalyticsEventName} from './analytics-constants.js';\nimport {errorIfServer} from './analytics-utils.js';\nimport {getShopifyCookies} from './cookies-utils.js';\n\nimport {pageView as trekkiePageView} from './analytics-schema-trekkie-storefront-page-view.js';\nimport {\n  pageView as customerPageView,\n  addToCart as customerAddToCart,\n} from './analytics-schema-custom-storefront-customer-tracking.js';\n\n/**\n * Set user and session cookies and refresh the expiry time\n * @param event - The analytics event.\n * @param shopDomain - The Online Store domain to sent Shopify analytics under the same\n *   top level domain.\n */\nexport function sendShopifyAnalytics(\n  event: ShopifyAnalytics,\n  shopDomain?: string,\n): Promise<void> {\n  const {eventName, payload} = event;\n  if (!payload.hasUserConsent) return Promise.resolve();\n\n  let events: ShopifyMonorailEvent[] = [];\n\n  if (eventName === AnalyticsEventName.PAGE_VIEW) {\n    const pageViewPayload = payload as ShopifyPageViewPayload;\n    events = events.concat(\n      trekkiePageView(pageViewPayload),\n      customerPageView(pageViewPayload),\n    );\n  } else if (eventName === AnalyticsEventName.ADD_TO_CART) {\n    events = events.concat(\n      customerAddToCart(payload as ShopifyAddToCartPayload),\n    );\n  }\n\n  if (events.length) {\n    return sendToShopify(events, shopDomain);\n  } else {\n    return Promise.resolve();\n  }\n}\n\ntype MonorailResponse = {\n  status: number;\n  message: string;\n};\n\nconst ERROR_MESSAGE = 'sendShopifyAnalytics request is unsuccessful';\n\nfunction sendToShopify(\n  events: ShopifyMonorailEvent[],\n  shopDomain?: string,\n): Promise<void> {\n  const eventsToBeSent = {\n    events,\n    metadata: {\n      event_sent_at_ms: Date.now(),\n    },\n  };\n\n  try {\n    return fetch(\n      shopDomain\n        ? `https://${shopDomain}/.well-known/shopify/monorail/unstable/produce_batch`\n        : 'https://monorail-edge.shopifysvc.com/unstable/produce_batch',\n      {\n        method: 'post',\n        headers: {\n          'content-type': 'text/plain',\n        },\n        body: JSON.stringify(eventsToBeSent),\n      },\n    )\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Response failed');\n        }\n        return response.text();\n      })\n      .then((data) => {\n        if (data) {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          const jsonResponse = JSON.parse(data);\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n          jsonResponse.result.forEach((eventResponse: MonorailResponse) => {\n            if (eventResponse.status !== 200) {\n              console.error(ERROR_MESSAGE, '\\n\\n', eventResponse.message);\n            }\n          });\n        }\n      })\n      .catch((err) => {\n        console.error(ERROR_MESSAGE, err);\n        if (__HYDROGEN_DEV__) {\n          throw new Error(ERROR_MESSAGE);\n        }\n      });\n  } catch (error) {\n    // Do nothing\n    return Promise.resolve();\n  }\n}\n\nexport function getClientBrowserParameters(): ClientBrowserParameters {\n  if (errorIfServer('getClientBrowserParameters')) {\n    return {\n      uniqueToken: '',\n      visitToken: '',\n      url: '',\n      path: '',\n      search: '',\n      referrer: '',\n      title: '',\n      userAgent: '',\n      navigationType: '',\n      navigationApi: '',\n    };\n  }\n\n  const [navigationType, navigationApi] = getNavigationType();\n  const cookies = getShopifyCookies(document.cookie);\n\n  return {\n    uniqueToken: cookies[SHOPIFY_Y],\n    visitToken: cookies[SHOPIFY_S],\n    url: location.href,\n    path: location.pathname,\n    search: location.search,\n    referrer: document.referrer,\n    title: document.title,\n    userAgent: navigator.userAgent,\n    navigationType,\n    navigationApi,\n  };\n}\n\nfunction getNavigationTypeExperimental(): string | undefined {\n  try {\n    const navigationEntries =\n      performance?.getEntriesByType &&\n      performance?.getEntriesByType('navigation');\n\n    if (navigationEntries && navigationEntries[0]) {\n      // https://developer.mozilla.org/en-US/docs/Web/API/PerformanceNavigationTiming\n      const rawType = (\n        window.performance.getEntriesByType(\n          'navigation',\n        )[0] as PerformanceNavigationTiming\n      )['type'];\n      const navType = rawType && rawType.toString();\n\n      return navType;\n    }\n  } catch (err) {\n    // Do nothing\n  }\n  return undefined;\n}\n\nfunction getNavigationTypeLegacy(): string | undefined {\n  try {\n    if (\n      PerformanceNavigation &&\n      performance?.navigation?.type !== null &&\n      performance?.navigation?.type !== undefined\n    ) {\n      //  https://developer.mozilla.org/en-US/docs/Web/API/Performance/navigation\n      const rawType = performance.navigation.type;\n      switch (rawType) {\n        case PerformanceNavigation.TYPE_NAVIGATE:\n          return 'navigate';\n          break;\n        case PerformanceNavigation.TYPE_RELOAD:\n          return 'reload';\n          break;\n        case PerformanceNavigation.TYPE_BACK_FORWARD:\n          return 'back_forward';\n          break;\n        default:\n          return `unknown: ${rawType}`;\n      }\n    }\n  } catch (err) {\n    // do nothing\n  }\n  return undefined;\n}\n\nfunction getNavigationType(): [string, string] {\n  try {\n    let navApi = 'PerformanceNavigationTiming';\n    let navType = getNavigationTypeExperimental();\n    if (!navType) {\n      navType = getNavigationTypeLegacy();\n      navApi = 'performance.navigation';\n    }\n    if (navType) {\n      return [navType, navApi];\n    } else {\n      return ['unknown', 'unknown'];\n    }\n  } catch (err) {\n    // do nothing\n  }\n  return ['error', 'error'];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}