{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport { createElement } from \"react\";\nimport { shopifyLoader } from \"./Image.mjs\";\nfunction Video(props) {\n  var _a;\n  const {\n    data,\n    previewImageOptions,\n    id = data.id,\n    playsInline = true,\n    controls = true,\n    sourceProps = {},\n    ...passthroughProps\n  } = props;\n  const posterUrl = shopifyLoader({\n    src: ((_a = data.previewImage) == null ? void 0 : _a.url) ?? \"\",\n    ...previewImageOptions\n  });\n  if (!data.sources) {\n    throw new Error(`<Video/> requires a 'data.sources' array`);\n  }\n  return (\n    // eslint-disable-next-line jsx-a11y/media-has-caption\n    /* @__PURE__ */\n    jsx(\"video\", {\n      ...passthroughProps,\n      id,\n      playsInline,\n      controls,\n      poster: posterUrl,\n      children: data.sources.map(source => {\n        if (!((source == null ? void 0 : source.url) && (source == null ? void 0 : source.mimeType))) {\n          throw new Error(`<Video/> needs 'source.url' and 'source.mimeType'`);\n        }\n        return /* @__PURE__ */createElement(\"source\", {\n          ...sourceProps,\n          key: source.url,\n          src: source.url,\n          type: source.mimeType\n        });\n      })\n    })\n  );\n}\nexport { Video };","map":{"version":3,"names":["Video","props","data","previewImageOptions","id","playsInline","controls","sourceProps","passthroughProps","posterUrl","shopifyLoader","src","_a","previewImage","url","sources","Error","jsx","poster","children","map","source","mimeType","createElement","key","type"],"sources":["/home/martin/node_modules/.pnpm/@shopify+hydrogen-react@2023.4.0_react-dom@18.2.0_react@18.2.0_typescript@5.0.4/node_modules/@shopify/hydrogen-react/src/Video.tsx"],"sourcesContent":["import {type HTMLAttributes} from 'react';\nimport {shopifyLoader} from './Image.js';\nimport type {Video as VideoType} from './storefront-api-types.js';\nimport type {PartialDeep} from 'type-fest';\n\nexport interface VideoProps {\n  /** An object with fields that correspond to the Storefront API's [Video object](https://shopify.dev/api/storefront/2023-04/objects/video). */\n  data: PartialDeep<VideoType, {recurseIntoArrays: true}>;\n  /** An object of image size options for the video's `previewImage`. Uses `shopifyImageLoader` to generate the `poster` URL. */\n  previewImageOptions?: Parameters<typeof shopifyLoader>[0];\n  /** Props that will be passed to the `video` element's `source` children elements. */\n  sourceProps?: HTMLAttributes<HTMLSourceElement> & {\n    'data-testid'?: string;\n  };\n}\n\n/**\n * The `Video` component renders a `video` for the Storefront API's [Video object](https://shopify.dev/api/storefront/reference/products/video).\n */\nexport function Video(\n  props: JSX.IntrinsicElements['video'] & VideoProps,\n): JSX.Element {\n  const {\n    data,\n    previewImageOptions,\n    id = data.id,\n    playsInline = true,\n    controls = true,\n    sourceProps = {},\n    ...passthroughProps\n  } = props;\n\n  const posterUrl = shopifyLoader({\n    src: data.previewImage?.url ?? '',\n    ...previewImageOptions,\n  });\n\n  if (!data.sources) {\n    throw new Error(`<Video/> requires a 'data.sources' array`);\n  }\n\n  return (\n    // eslint-disable-next-line jsx-a11y/media-has-caption\n    <video\n      {...passthroughProps}\n      id={id}\n      playsInline={playsInline}\n      controls={controls}\n      poster={posterUrl}\n    >\n      {data.sources.map((source) => {\n        if (!(source?.url && source?.mimeType)) {\n          throw new Error(`<Video/> needs 'source.url' and 'source.mimeType'`);\n        }\n        return (\n          <source\n            {...sourceProps}\n            key={source.url}\n            src={source.url}\n            type={source.mimeType}\n          />\n        );\n      })}\n    </video>\n  );\n}\n"],"mappings":";;;AAmBO,SAASA,MACdC,KAAA,EACa;;EACP;IACJC,IAAA;IACAC,mBAAA;IACAC,EAAA,GAAKF,IAAA,CAAKE,EAAA;IACVC,WAAA,GAAc;IACdC,QAAA,GAAW;IACXC,WAAA,GAAc,CAAC;IACf,GAAGC;EACD,IAAAP,KAAA;EAEJ,MAAMQ,SAAA,GAAYC,aAAA,CAAc;IAC9BC,GAAA,IAAKC,EAAA,GAAAV,IAAA,CAAKW,YAAA,KAAL,gBAAAD,EAAA,CAAmBE,GAAA,KAAO;IAC/B,GAAGX;EAAA,CACJ;EAEG,KAACD,IAAA,CAAKa,OAAA,EAAS;IACX,UAAIC,KAAA,CAAM,0CAA0C;EAC5D;EAEA;IAAA;IAEE;IAAAC,GAAA,CAAC;MACE,GAAGT,gBAAA;MACJJ,EAAA;MACAC,WAAA;MACAC,QAAA;MACAY,MAAA,EAAQT,SAAA;MAEPU,QAAA,EAAKjB,IAAA,CAAAa,OAAA,CAAQK,GAAA,CAAKC,MAAA,IAAW;QAC5B,IAAI,GAAEA,MAAA,oBAAAA,MAAA,CAAQP,GAAA,MAAOO,MAAA,oBAAAA,MAAA,CAAQC,QAAA,IAAW;UAChC,UAAIN,KAAA,CAAM,mDAAmD;QACrE;QAEE,sBAAAO,aAAA,CAAC;UACE,GAAGhB,WAAA;UACJiB,GAAA,EAAKH,MAAA,CAAOP,GAAA;UACZH,GAAA,EAAKU,MAAA,CAAOP,GAAA;UACZW,IAAA,EAAMJ,MAAA,CAAOC;QAAA;MACf,CAEH;IAAA,CACH;EAAA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}