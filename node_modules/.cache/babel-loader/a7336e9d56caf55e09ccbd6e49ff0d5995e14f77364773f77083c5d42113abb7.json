{"ast":null,"code":"import { AnalyticsPageType, ShopifySalesChannel } from \"./analytics-constants.mjs\";\nimport { schemaWrapper, addDataIf, parseGid } from \"./analytics-utils.mjs\";\nimport { buildUUID } from \"./cookies-utils.mjs\";\nconst SCHEMA_ID = \"custom_storefront_customer_tracking/1.0\";\nconst PAGE_RENDERED_EVENT_NAME = \"page_rendered\";\nconst COLLECTION_PAGE_RENDERED_EVENT_NAME = \"collection_page_rendered\";\nconst PRODUCT_PAGE_RENDERED_EVENT_NAME = \"product_page_rendered\";\nconst PRODUCT_ADDED_TO_CART_EVENT_NAME = \"product_added_to_cart\";\nconst SEARCH_SUBMITTED_EVENT_NAME = \"search_submitted\";\nfunction pageView(payload) {\n  const pageViewPayload = payload;\n  const additionalPayload = {\n    canonical_url: pageViewPayload.canonicalUrl || pageViewPayload.url,\n    customer_id: pageViewPayload.customerId\n  };\n  const pageType = pageViewPayload.pageType;\n  const pageViewEvents = [];\n  pageViewEvents.push(schemaWrapper(SCHEMA_ID, addDataIf({\n    event_name: PAGE_RENDERED_EVENT_NAME,\n    ...additionalPayload\n  }, formatPayload(pageViewPayload))));\n  switch (pageType) {\n    case AnalyticsPageType.collection:\n      pageViewEvents.push(schemaWrapper(SCHEMA_ID, addDataIf({\n        event_name: COLLECTION_PAGE_RENDERED_EVENT_NAME,\n        ...additionalPayload,\n        collection_name: pageViewPayload.collectionHandle\n      }, formatPayload(pageViewPayload))));\n      break;\n    case AnalyticsPageType.product:\n      pageViewEvents.push(schemaWrapper(SCHEMA_ID, addDataIf({\n        event_name: PRODUCT_PAGE_RENDERED_EVENT_NAME,\n        ...additionalPayload,\n        products: formatProductPayload(pageViewPayload.products),\n        total_value: pageViewPayload.totalValue\n      }, formatPayload(pageViewPayload))));\n      break;\n    case AnalyticsPageType.search:\n      pageViewEvents.push(schemaWrapper(SCHEMA_ID, addDataIf({\n        event_name: SEARCH_SUBMITTED_EVENT_NAME,\n        ...additionalPayload,\n        search_string: pageViewPayload.searchString\n      }, formatPayload(pageViewPayload))));\n      break;\n  }\n  return pageViewEvents;\n}\nfunction addToCart(payload) {\n  const addToCartPayload = payload;\n  const cartToken = parseGid(addToCartPayload.cartId);\n  const cart_token = (cartToken == null ? void 0 : cartToken.id) ? `${cartToken.id}` : null;\n  return [schemaWrapper(SCHEMA_ID, addDataIf({\n    event_name: PRODUCT_ADDED_TO_CART_EVENT_NAME,\n    customerId: addToCartPayload.customerId,\n    cart_token,\n    total_value: addToCartPayload.totalValue,\n    products: formatProductPayload(addToCartPayload.products)\n  }, formatPayload(addToCartPayload)))];\n}\nfunction formatPayload(payload) {\n  return {\n    source: payload.shopifySalesChannel || ShopifySalesChannel.headless,\n    hydrogenSubchannelId: payload.storefrontId || \"0\",\n    is_persistent_cookie: payload.hasUserConsent,\n    ccpa_enforced: false,\n    gdpr_enforced: false,\n    unique_token: payload.uniqueToken,\n    event_time: Date.now(),\n    event_id: buildUUID(),\n    event_source_url: payload.url,\n    referrer: payload.referrer,\n    user_agent: payload.userAgent,\n    navigation_type: payload.navigationType,\n    navigation_api: payload.navigationApi,\n    shop_id: parseInt(parseGid(payload.shopId).id),\n    currency: payload.currency\n  };\n}\nfunction formatProductPayload(products) {\n  return products ? products.map(p => {\n    const product = addDataIf({\n      variant_gid: p.variantGid,\n      category: p.category,\n      sku: p.sku,\n      product_id: parseInt(parseGid(p.productGid).id),\n      variant_id: parseInt(parseGid(p.variantGid).id)\n    }, {\n      product_gid: p.productGid,\n      name: p.name,\n      variant: p.variantName || \"\",\n      brand: p.brand,\n      price: p.price,\n      quantity: Number(p.quantity || 0)\n    });\n    return JSON.stringify(product);\n  }) : [];\n}\nexport { addToCart, pageView };","map":{"version":3,"names":["SCHEMA_ID","PAGE_RENDERED_EVENT_NAME","COLLECTION_PAGE_RENDERED_EVENT_NAME","PRODUCT_PAGE_RENDERED_EVENT_NAME","PRODUCT_ADDED_TO_CART_EVENT_NAME","SEARCH_SUBMITTED_EVENT_NAME","pageView","payload","pageViewPayload","additionalPayload","canonical_url","canonicalUrl","url","customer_id","customerId","pageType","pageViewEvents","push","schemaWrapper","addDataIf","event_name","formatPayload","AnalyticsPageType","collection","collection_name","collectionHandle","product","products","formatProductPayload","total_value","totalValue","search","search_string","searchString","addToCart","addToCartPayload","cartToken","parseGid","cartId","cart_token","id","source","shopifySalesChannel","ShopifySalesChannel","headless","hydrogenSubchannelId","storefrontId","is_persistent_cookie","hasUserConsent","ccpa_enforced","gdpr_enforced","unique_token","uniqueToken","event_time","Date","now","event_id","buildUUID","event_source_url","referrer","user_agent","userAgent","navigation_type","navigationType","navigation_api","navigationApi","shop_id","parseInt","shopId","currency","map","p","variant_gid","variantGid","category","sku","product_id","productGid","variant_id","product_gid","name","variant","variantName","brand","price","quantity","Number","JSON","stringify"],"sources":["/home/martin/node_modules/.pnpm/@shopify+hydrogen-react@2023.4.0_react-dom@18.2.0_react@18.2.0_typescript@5.0.4/node_modules/@shopify/hydrogen-react/src/analytics-schema-custom-storefront-customer-tracking.ts"],"sourcesContent":["import {\n  ShopifyAnalyticsPayload,\n  ShopifyPageViewPayload,\n  ShopifyAddToCartPayload,\n  ShopifyMonorailPayload,\n  ShopifyAnalyticsProduct,\n  ShopifyMonorailEvent,\n} from './analytics-types.js';\nimport {AnalyticsPageType, ShopifySalesChannel} from './analytics-constants.js';\nimport {addDataIf, schemaWrapper, parseGid} from './analytics-utils.js';\nimport {buildUUID} from './cookies-utils.js';\n\nconst SCHEMA_ID = 'custom_storefront_customer_tracking/1.0';\nconst PAGE_RENDERED_EVENT_NAME = 'page_rendered';\nconst COLLECTION_PAGE_RENDERED_EVENT_NAME = 'collection_page_rendered';\nconst PRODUCT_PAGE_RENDERED_EVENT_NAME = 'product_page_rendered';\nconst PRODUCT_ADDED_TO_CART_EVENT_NAME = 'product_added_to_cart';\nconst SEARCH_SUBMITTED_EVENT_NAME = 'search_submitted';\n\nexport function pageView(\n  payload: ShopifyPageViewPayload,\n): ShopifyMonorailEvent[] {\n  const pageViewPayload = payload;\n  const additionalPayload = {\n    canonical_url: pageViewPayload.canonicalUrl || pageViewPayload.url,\n    customer_id: pageViewPayload.customerId,\n  };\n  const pageType = pageViewPayload.pageType;\n  const pageViewEvents = [];\n\n  pageViewEvents.push(\n    schemaWrapper(\n      SCHEMA_ID,\n      addDataIf(\n        {\n          event_name: PAGE_RENDERED_EVENT_NAME,\n          ...additionalPayload,\n        },\n        formatPayload(pageViewPayload),\n      ),\n    ),\n  );\n\n  switch (pageType) {\n    case AnalyticsPageType.collection:\n      pageViewEvents.push(\n        schemaWrapper(\n          SCHEMA_ID,\n          addDataIf(\n            {\n              event_name: COLLECTION_PAGE_RENDERED_EVENT_NAME,\n              ...additionalPayload,\n              collection_name: pageViewPayload.collectionHandle,\n            },\n            formatPayload(pageViewPayload),\n          ),\n        ),\n      );\n      break;\n    case AnalyticsPageType.product:\n      pageViewEvents.push(\n        schemaWrapper(\n          SCHEMA_ID,\n          addDataIf(\n            {\n              event_name: PRODUCT_PAGE_RENDERED_EVENT_NAME,\n              ...additionalPayload,\n              products: formatProductPayload(pageViewPayload.products),\n              total_value: pageViewPayload.totalValue,\n            },\n            formatPayload(pageViewPayload),\n          ),\n        ),\n      );\n      break;\n    case AnalyticsPageType.search:\n      pageViewEvents.push(\n        schemaWrapper(\n          SCHEMA_ID,\n          addDataIf(\n            {\n              event_name: SEARCH_SUBMITTED_EVENT_NAME,\n              ...additionalPayload,\n              search_string: pageViewPayload.searchString,\n            },\n            formatPayload(pageViewPayload),\n          ),\n        ),\n      );\n      break;\n  }\n\n  return pageViewEvents;\n}\n\nexport function addToCart(\n  payload: ShopifyAddToCartPayload,\n): ShopifyMonorailEvent[] {\n  const addToCartPayload = payload;\n  const cartToken = parseGid(addToCartPayload.cartId);\n  const cart_token = cartToken?.id ? `${cartToken.id}` : null;\n  return [\n    schemaWrapper(\n      SCHEMA_ID,\n      addDataIf(\n        {\n          event_name: PRODUCT_ADDED_TO_CART_EVENT_NAME,\n          customerId: addToCartPayload.customerId,\n          cart_token,\n          total_value: addToCartPayload.totalValue,\n          products: formatProductPayload(addToCartPayload.products),\n        },\n        formatPayload(addToCartPayload),\n      ),\n    ),\n  ];\n}\n\nfunction formatPayload(\n  payload: ShopifyAnalyticsPayload,\n): ShopifyMonorailPayload {\n  return {\n    source: payload.shopifySalesChannel || ShopifySalesChannel.headless,\n    hydrogenSubchannelId: payload.storefrontId || '0',\n\n    is_persistent_cookie: payload.hasUserConsent,\n    ccpa_enforced: false,\n    gdpr_enforced: false,\n    unique_token: payload.uniqueToken,\n    event_time: Date.now(),\n    event_id: buildUUID(),\n\n    event_source_url: payload.url,\n    referrer: payload.referrer,\n    user_agent: payload.userAgent,\n    navigation_type: payload.navigationType,\n    navigation_api: payload.navigationApi,\n\n    shop_id: parseInt(parseGid(payload.shopId).id),\n    currency: payload.currency,\n  };\n}\n\nfunction formatProductPayload(products?: ShopifyAnalyticsProduct[]): string[] {\n  return products\n    ? products.map((p: ShopifyAnalyticsProduct) => {\n        const product = addDataIf(\n          {\n            variant_gid: p.variantGid,\n            category: p.category,\n            sku: p.sku,\n            product_id: parseInt(parseGid(p.productGid).id),\n            variant_id: parseInt(parseGid(p.variantGid).id),\n          },\n          {\n            product_gid: p.productGid,\n            name: p.name,\n            variant: p.variantName || '',\n            brand: p.brand,\n            price: p.price,\n            quantity: Number(p.quantity || 0),\n          },\n        );\n        return JSON.stringify(product);\n      })\n    : [];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}